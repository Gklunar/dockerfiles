{{- $ghcrhost := "ghcr.io" }}
{{- $ghcrns := print $ghcrhost "/hairyhenderson" }}
name: Docker Build
on:
  pull_request:
  push:
    branches:
      - master
  schedule:
    - cron: '42 2 * * 2'

jobs:
{{- range .dir }}
{{- $isDir := file.IsDir . -}}
{{ $hasDockerfile := file.Exists (filepath.Join . "Dockerfile") -}}
{{ $notHidden := not (strings.HasPrefix "." .) -}}
{{ $noIgnore := not (file.Exists (filepath.Join . ".ignore")) -}}
{{ $bashbrewBuild := file.Exists (filepath.Join "library" .) -}}
{{ if and $isDir $hasDockerfile $notHidden $noIgnore }}
  {{- if $bashbrewBuild }}
  docker-build-{{ . }}:
    name: docker build {{ . }}
    runs-on: ubuntu-20.04
    container:
      image: hairyhenderson/dockerfiles-builder:latest
    env:
      BASHBREW_LIBRARY: ./library
      BASHBREW_NAMESPACE: hairyhenderson
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: build
      run: |
        bashbrew build {{ . }}
        img=$(bashbrew ls {{ . }} --uniq | head -n1)
        echo "IMG_NAME=${img}" >> $GITHUB_ENV
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: {{ "${{ env.IMG_NAME }}" }}
        format: 'template'
        template: '@/contrib/sarif.tpl'
        output: 'trivy-results.sarif'
        exit-code: 1
        ignore-unfixed: true
    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v1
      with:
        sarif_file: 'trivy-results.sarif'
      if: always() && github.repository == 'hairyhenderson/dockerfiles'
    - name: tag
      run: bashbrew tag --target-namespace {{ $ghcrns }} {{ . }}
    - name: login
      run: |
        echo {{"${{ secrets.GHCR_TOKEN }}"}} | docker login {{ $ghcrhost }} --username {{ "${{ github.actor }}" }} --password-stdin
        echo {{"${{ secrets.DOCKERHUB_TOKEN }}"}} | docker login --username {{ "${{ github.actor }}" }} --password-stdin
      if: github.repository == 'hairyhenderson/dockerfiles' && github.actor == 'hairyhenderson'
    - name: push
      run: |
        bashbrew push --dry-run {{ . }}
        bashbrew push --dry-run --target-namespace {{ $ghcrns }} {{ . }}
      if: github.ref != 'refs/heads/master' && github.repository == 'hairyhenderson/dockerfiles' && github.actor == 'hairyhenderson'
    - name: push
      run: |
        bashbrew push {{ . }}
        bashbrew push --target-namespace {{ $ghcrns }} {{ . }}
      if: github.ref == 'refs/heads/master' && github.repository == 'hairyhenderson/dockerfiles'
  {{- else }}
  docker-build-{{ . }}:
    name: docker build {{ . }}
    runs-on: ubuntu-20.04
    env:
      DOCKER_BUILDKIT: 1
      DOCKER_CLI_EXPERIMENTAL: enabled
    steps:
    - name: enable experimental mode
      run: |
        mkdir -p ~/.docker
        echo '{"experimental": "enabled"}' > ~/.docker/config.json
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1.2.0
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v1.6.0
      with:
        version: v0.5.1
        driver-opts: |
          image=moby/buildkit:buildx-stable-1
          network=host
    - name: Available platforms
      run: echo {{ `${{ steps.buildx.outputs.platforms }}` }}
    - name: Build (non-master branch)
      run: |
        docker buildx build --tag {{ $ghcrns }}/{{ . }}:{{ `${{ github.sha }}` }} --load {{ . }}/
      if: github.repository == 'hairyhenderson/dockerfiles'
    - name: Run Trivy vulnerability scanner (table output)
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: '{{ $ghcrns }}/{{ . }}:{{ `${{ github.sha }}` }}'
        format: 'table'
        exit-code: 1
        ignore-unfixed: true
        vuln-type: 'os,library'
        severity: 'CRITICAL,HIGH'
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: '{{ $ghcrns }}/{{ . }}:{{ `${{ github.sha }}` }}'
        format: 'template'
        template: '@/contrib/sarif.tpl'
        output: 'trivy-results.sarif'
        exit-code: 1
        ignore-unfixed: true
        vuln-type: 'os,library'
        severity: 'CRITICAL,HIGH'
    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v1
      with:
        sarif_file: 'trivy-results.sarif'
      if: always() && github.repository == 'hairyhenderson/dockerfiles'
    - name: Login to GHCR
      uses: docker/login-action@v1.10.0
      with:
          registry: ghcr.io
          username: '{{ `${{ github.actor }}` }}'
          password: '{{ `${{ secrets.GHCR_TOKEN }}` }}'
      # if: github.repository == 'hairyhenderson/dockerfiles' && github.actor == 'hairyhenderson' && github.ref == 'refs/heads/master'
      if: github.repository == 'hairyhenderson/dockerfiles' && github.actor == 'hairyhenderson'
    - name: Login to DockerHub
      uses: docker/login-action@v1.10.0
      with:
          username: '{{ `${{ github.actor }}` }}'
          password: '{{ `${{ secrets.DOCKERHUB_TOKEN }}` }}'
      if: github.repository == 'hairyhenderson/dockerfiles' && github.actor == 'hairyhenderson' && github.ref == 'refs/heads/master'
    - name: Build & Push (master branch)
      run: |
        {{- if file.Exists (filepath.Join . ".docker-platforms") }}
        PLATFORMS={{ file.Read (filepath.Join . ".docker-platforms") | strings.TrimSpace }}
        {{- else }}
        PLATFORMS=linux/amd64,linux/arm64,linux/arm/v6,linux/arm/v7
        {{- end }}

        docker buildx build \
          --platform $PLATFORMS \
          --tag {{ $ghcrns }}/{{ . }}:{{ `${{ github.sha }}` }} --push {{ . }}/
        # docker buildx build \
        #   --platform $PLATFORMS \
        #   --tag hairyhenderson/{{ . }}:{{ `${{ github.sha }}` }} --push {{ . }}/

        # docker buildx imagetools create \
        #   -t {{ $ghcrns }}/{{ . }}:{{ `${{ github.sha }}` }} \
        #   {{ $ghcrns }}/{{ . }}:latest
        # docker buildx imagetools create \
        #   -t hairyhenderson/{{ . }}:{{ `${{ github.sha }}` }} \
        #   hairyhenderson/{{ . }}:latest
      # if: github.repository == 'hairyhenderson/dockerfiles' && github.actor == 'hairyhenderson' && github.ref == 'refs/heads/master'
      if: github.repository == 'hairyhenderson/dockerfiles' && github.actor == 'hairyhenderson'
    {{- end }}
{{- end }}{{ end }}
